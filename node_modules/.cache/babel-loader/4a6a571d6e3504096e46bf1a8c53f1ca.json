{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  display: \"0\",\n  previous: \"\",\n  record: []\n};\nexport const kalkulator = createSlice({\n  name: \"kalkulator\",\n  initialState,\n  reducers: {\n    setDisplay: (state, action) => {\n      if (state.display === \"0\") {\n        state.display = \"\";\n      }\n\n      let concat = state.display.concat(action.payload);\n      state.display = concat;\n    },\n    clear: state => {\n      state.display = initialState.display;\n    },\n    setPrevious: (state, action) => {\n      state.previous = action.payload;\n    },\n    pushToRecord: (state, action) => {\n      let push = [...state.record, action.payload];\n      state.record = push;\n    },\n    clearRecord: state => {\n      state.record = [];\n    },\n    popRecord: state => {\n      state.record.pop();\n    }\n  }\n});\nexport const actions = kalkulator.actions;\nexport default kalkulator.reducer;","map":{"version":3,"names":["createSlice","initialState","display","previous","record","kalkulator","name","reducers","setDisplay","state","action","concat","payload","clear","setPrevious","pushToRecord","push","clearRecord","popRecord","pop","actions","reducer"],"sources":["C:/Github/KalkulatorReact/src/kalkulator/kalkulator.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nconst initialState = {\n    display: \"0\",\n    previous: \"\",\n    record: []\n};\n\nexport const kalkulator = createSlice({\n    name: \"kalkulator\",\n    initialState,\n    reducers: {\n\n        setDisplay: (state, action) => {\n            if (state.display === \"0\") {\n                state.display = \"\";\n            }\n            let concat = state\n                .display\n                .concat(action.payload);\n            state.display = concat;\n        },\n\n        clear: (state) => {\n            state.display = initialState.display;\n        },\n\n        setPrevious: (state, action) => {\n            state.previous = action.payload;\n        },\n\n        pushToRecord: (state, action) => {\n            let push = [\n                ...state.record,\n                action.payload\n            ];\n            state.record = push;\n        },\n\n        clearRecord: (state) => {\n            state.record = [];\n        },\n\n        popRecord: (state) => {\n            state\n                .record\n                .pop();\n        }\n    }\n});\n\nexport const actions = kalkulator.actions;\nexport default kalkulator.reducer;\n"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,GADQ;EAEjBC,QAAQ,EAAE,EAFO;EAGjBC,MAAM,EAAE;AAHS,CAArB;AAMA,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;EAClCM,IAAI,EAAE,YAD4B;EAElCL,YAFkC;EAGlCM,QAAQ,EAAE;IAENC,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3B,IAAID,KAAK,CAACP,OAAN,KAAkB,GAAtB,EAA2B;QACvBO,KAAK,CAACP,OAAN,GAAgB,EAAhB;MACH;;MACD,IAAIS,MAAM,GAAGF,KAAK,CACbP,OADQ,CAERS,MAFQ,CAEDD,MAAM,CAACE,OAFN,CAAb;MAGAH,KAAK,CAACP,OAAN,GAAgBS,MAAhB;IACH,CAVK;IAYNE,KAAK,EAAGJ,KAAD,IAAW;MACdA,KAAK,CAACP,OAAN,GAAgBD,YAAY,CAACC,OAA7B;IACH,CAdK;IAgBNY,WAAW,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACE,OAAxB;IACH,CAlBK;IAoBNG,YAAY,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;MAC7B,IAAIM,IAAI,GAAG,CACP,GAAGP,KAAK,CAACL,MADF,EAEPM,MAAM,CAACE,OAFA,CAAX;MAIAH,KAAK,CAACL,MAAN,GAAeY,IAAf;IACH,CA1BK;IA4BNC,WAAW,EAAGR,KAAD,IAAW;MACpBA,KAAK,CAACL,MAAN,GAAe,EAAf;IACH,CA9BK;IAgCNc,SAAS,EAAGT,KAAD,IAAW;MAClBA,KAAK,CACAL,MADL,CAEKe,GAFL;IAGH;EApCK;AAHwB,CAAD,CAA9B;AA2CP,OAAO,MAAMC,OAAO,GAAGf,UAAU,CAACe,OAA3B;AACP,eAAef,UAAU,CAACgB,OAA1B"},"metadata":{},"sourceType":"module"}